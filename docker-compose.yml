services:
  # Telegram Shop Bot
  remnawave-tg-shop:
    image: ghcr.io/press-vm/remnawave-tg-bot:latest
    container_name: remnawave-tg-shop
    hostname: remnawave-tg-shop
    environment:
      - GENERIC_TIMEZONE=Europe/Moscow
      - TZ=Europe/Moscow
    env_file:
      - .env
    networks:
      - remnawave-network
    volumes:
      - ./locales:/app/locales
    restart: unless-stopped
    depends_on:
      - remnawave-tg-shop-db

  # База данных для бота
  remnawave-tg-shop-db:
    image: postgres:17-alpine
    container_name: remnawave-tg-shop-db
    hostname: remnawave-tg-shop-db
    environment:
      - GENERIC_TIMEZONE=Europe/Moscow
      - TZ=Europe/Moscow
    env_file:
      - .env
    volumes:
      - remnawave-tg-shop-db-data:/var/lib/postgresql/data
    networks:
      - remnawave-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  # Landing Page с защитой от сканеров
  landing:
    image: nginx:alpine
    container_name: landing
    restart: always
    environment:
      - GENERIC_TIMEZONE=Europe/Moscow
      - TZ=Europe/Moscow
    volumes:
      - ./landing/index.html:/usr/share/nginx/html/index.html:ro
      - ./nginx-security.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.landing.rule=Host(`pressvpn.shop`)"
      - "traefik.http.routers.landing.entrypoints=https"
      - "traefik.http.routers.landing.tls=true"
      - "traefik.http.routers.landing.tls.certresolver=cloudflare"
      - "traefik.docker.network=remnawave-network"
    networks:
      - remnawave-network
      
networks:
  remnawave-network:
    external: true

volumes:
  remnawave-tg-shop-db-data:
    external: true
    name: remnawave-tg-shop-db-data